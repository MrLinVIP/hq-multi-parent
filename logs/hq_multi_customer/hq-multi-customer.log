2019-11-29 10:57:24.748 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$834e39da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 10:57:25.614 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 10:57:26.604 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 10:57:26.838 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 10:57:26.842 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 10:57:26.870 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 8ms. Found 0 repository interfaces. 
2019-11-29 10:57:27.012 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 10:57:27.025 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 10:57:27.184 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=1a7328e5-f036-3487-b999-660613326de6 
2019-11-29 10:57:27.378 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 10:57:27.649 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 10:57:27.654 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 10:57:27.744 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 10:57:27.825 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 10:57:27.831 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$a3986100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 10:57:27.873 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$834e39da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 10:57:28.190 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 10:57:28.201 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 10:57:28.201 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 10:57:28.202 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 10:57:28.318 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 10:57:28.318 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2679 ms 
2019-11-29 10:57:28.424 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 10:57:28.425 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 10:57:28.438 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@566f4659 
2019-11-29 10:57:28.630 [main] ERROR [o.s.b.w.e.tomcat.TomcatStarter:61] - onStartup() - Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dbHealthContributor' defined in class path resource [org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthContributorAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributor]: Factory method 'dbHealthContributor' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class 
2019-11-29 10:57:28.669 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Stopping service [Tomcat] 
2019-11-29 10:57:28.682 [main] WARN  [o.a.c.loader.WebappClassLoaderBase:173] - log() - The web application [ROOT] appears to have started a thread named [logback-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
 java.lang.Thread.run(Thread.java:745) 
2019-11-29 10:57:28.682 [main] WARN  [o.a.c.loader.WebappClassLoaderBase:173] - log() - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:142)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43) 
2019-11-29 10:57:28.684 [main] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:558] - refresh() - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat 
2019-11-29 10:57:28.713 [main] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener:136] - logMessage() - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2019-11-29 10:57:28.725 [main] ERROR [o.s.b.d.LoggingFailureAnalysisReporter:40] - report() - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).
 
2019-11-29 10:58:29.110 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b02b428b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 10:58:29.303 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 10:58:30.146 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 10:58:30.148 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 10:58:30.169 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 8ms. Found 0 repository interfaces. 
2019-11-29 10:58:30.268 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 10:58:30.280 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 10:58:30.406 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=1623e34e-ed15-3d26-b710-3f78e6718e02 
2019-11-29 10:58:30.686 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b02b428b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 10:58:30.981 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 10:58:30.990 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 10:58:30.990 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 10:58:30.990 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 10:58:31.082 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 10:58:31.083 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 1754 ms 
2019-11-29 10:58:31.169 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 10:58:31.169 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 10:58:31.177 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@69b3886f 
2019-11-29 10:58:32.263 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 10:58:32.366 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 10:58:32.387 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 10:58:32.387 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 10:58:32.512 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 10:58:32.986 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 10:58:33.000 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 10:58:33.032 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 10:58:33.068 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 10:58:33.204 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 10:58:33.204 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 10:58:33.335 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 10:58:33.335 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 10:58:33.559 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 10:58:33.589 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 10:58:33.589 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 10:58:33.589 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 10:58:33.589 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 10:58:33.590 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 10:58:33.590 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 10:58:33.590 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 10:58:33.963 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 10:58:33.965 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 10:58:33.967 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 10:58:33.972 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1574996313971 with initial instances count: 0 
2019-11-29 10:58:33.975 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 10:58:33.976 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1574996313976, current=UP, previous=STARTING] 
2019-11-29 10:58:33.977 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 10:58:33.978 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 10:58:34.056 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 10:58:34.112 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 10:58:34.119 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 10:58:34.256 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 10:58:34.258 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 10:58:34.259 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 10:58:34.286 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 10:58:34.308 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 10:58:34.310 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 10:58:34.332 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 6.49 seconds (JVM running for 7.636)
2019-11-29 10:59:03.968 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 10:59:03.969 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 10:59:03.969 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 10:59:03.969 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 10:59:03.969 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 10:59:03.969 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: false 
2019-11-29 10:59:03.970 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 10:59:04.002 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 11:00:05.917 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f383b4b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:06.097 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 11:00:07.158 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 11:00:07.161 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 11:00:07.190 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 13ms. Found 0 repository interfaces. 
2019-11-29 11:00:07.286 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:00:07.300 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:00:07.452 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=89cbad21-746b-3484-8c7b-10ea4ff76c92 
2019-11-29 11:00:07.682 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:07.821 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:08.078 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:08.142 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:08.148 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$13cddbda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:08.184 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f383b4b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:08.427 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 11:00:08.438 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:00:08.439 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 11:00:08.440 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 11:00:08.543 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 11:00:08.543 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2427 ms 
2019-11-29 11:00:08.644 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 11:00:08.644 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 11:00:08.656 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@520a95ff 
2019-11-29 11:00:09.753 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 11:00:09.827 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 11:00:09.903 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 11:00:09.903 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 11:00:10.103 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 11:00:10.497 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 11:00:10.511 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 11:00:10.543 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 11:00:10.577 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 11:00:10.704 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 11:00:10.705 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 11:00:10.847 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 11:00:10.847 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 11:00:11.204 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 11:00:11.246 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 11:00:11.247 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 11:00:11.247 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 11:00:11.247 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 11:00:11.247 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 11:00:11.247 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 11:00:11.248 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 11:00:11.521 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 11:00:11.525 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 11:00:11.528 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 11:00:11.534 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1574996411533 with initial instances count: 1 
2019-11-29 11:00:11.538 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 11:00:11.539 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1574996411539, current=UP, previous=STARTING] 
2019-11-29 11:00:11.541 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 11:00:11.542 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 11:00:11.567 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 11:00:11.579 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 11:00:11.612 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 11:00:12.071 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 11:00:12.072 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 11:00:12.074 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 11:00:12.101 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:00:12.129 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 11:00:12.131 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 11:00:12.155 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 7.879 seconds (JVM running for 8.769)
2019-11-29 11:00:30.419 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c47adc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:30.724 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 11:00:32.180 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 11:00:32.183 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 11:00:32.220 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 11ms. Found 0 repository interfaces. 
2019-11-29 11:00:32.339 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:00:32.354 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:00:32.507 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=89cbad21-746b-3484-8c7b-10ea4ff76c92 
2019-11-29 11:00:32.712 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:32.818 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:33.040 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:33.106 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:33.112 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$270ea202] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:33.149 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c47adc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:00:33.420 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 11:00:33.432 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:00:33.433 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 11:00:33.433 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 11:00:33.557 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 11:00:33.557 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2804 ms 
2019-11-29 11:00:33.658 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 11:00:33.659 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 11:00:33.672 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1224e1b6 
2019-11-29 11:00:34.708 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 11:00:34.787 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 11:00:34.835 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 11:00:34.835 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 11:00:34.994 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 11:00:35.445 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 11:00:35.460 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 11:00:35.491 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 11:00:35.525 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 11:00:35.665 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 11:00:35.666 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 11:00:35.810 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 11:00:35.811 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 11:00:36.084 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 11:00:36.116 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 11:00:36.116 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 11:00:36.116 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 11:00:36.117 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 11:00:36.117 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 11:00:36.117 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 11:00:36.117 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 11:00:36.379 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 11:00:36.383 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 11:00:36.386 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 11:00:36.392 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1574996436391 with initial instances count: 1 
2019-11-29 11:00:36.398 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 11:00:36.398 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1574996436398, current=UP, previous=STARTING] 
2019-11-29 11:00:36.400 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 11:00:36.402 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 11:00:36.433 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 11:00:36.451 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 11:00:36.482 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 11:00:36.863 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 11:00:36.864 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 11:00:36.866 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 11:00:36.894 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:00:36.917 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 11:00:36.918 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 11:00:36.938 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 8.235 seconds (JVM running for 9.705)
2019-11-29 11:01:05.731 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dbb6bd4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:01:05.955 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 11:01:06.932 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 11:01:07.112 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 11:01:07.115 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 11:01:07.137 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 8ms. Found 0 repository interfaces. 
2019-11-29 11:01:07.276 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:01:07.294 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:01:07.455 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=1a7328e5-f036-3487-b999-660613326de6 
2019-11-29 11:01:07.618 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:01:07.854 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:01:07.861 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:01:07.978 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:01:08.057 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:01:08.066 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$fc00e473] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:01:08.108 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dbb6bd4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:01:08.352 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 11:01:08.362 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:01:08.362 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 11:01:08.363 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 11:01:08.486 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 11:01:08.487 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2505 ms 
2019-11-29 11:01:08.591 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 11:01:08.592 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 11:01:08.605 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@16a09809 
2019-11-29 11:01:08.770 [main] ERROR [o.s.b.w.e.tomcat.TomcatStarter:61] - onStartup() - Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dbHealthContributor' defined in class path resource [org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthContributorAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributor]: Factory method 'dbHealthContributor' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class 
2019-11-29 11:01:08.801 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Stopping service [Tomcat] 
2019-11-29 11:01:08.815 [main] WARN  [o.a.c.loader.WebappClassLoaderBase:173] - log() - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:142)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43) 
2019-11-29 11:01:08.817 [main] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:558] - refresh() - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat 
2019-11-29 11:01:08.852 [main] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener:136] - logMessage() - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2019-11-29 11:01:08.861 [main] ERROR [o.s.b.d.LoggingFailureAnalysisReporter:40] - report() - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).
 
2019-11-29 11:02:59.953 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c1fcfa5b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:03:00.164 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 11:03:01.246 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 11:03:01.478 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 11:03:01.481 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 11:03:01.514 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 10ms. Found 0 repository interfaces. 
2019-11-29 11:03:01.638 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:03:01.652 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:03:01.846 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=1a7328e5-f036-3487-b999-660613326de6 
2019-11-29 11:03:02.039 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:03:02.285 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:03:02.291 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:03:02.410 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:03:02.507 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:03:02.512 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$e2472181] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:03:02.564 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c1fcfa5b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:03:02.842 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 11:03:02.852 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:03:02.853 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 11:03:02.853 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 11:03:03.007 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 11:03:03.008 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2812 ms 
2019-11-29 11:03:03.167 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 11:03:03.169 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 11:03:03.190 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@393ae7a0 
2019-11-29 11:03:03.368 [main] ERROR [o.s.b.w.e.tomcat.TomcatStarter:61] - onStartup() - Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dbHealthContributor' defined in class path resource [org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthContributorAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributor]: Factory method 'dbHealthContributor' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class 
2019-11-29 11:03:03.404 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Stopping service [Tomcat] 
2019-11-29 11:03:03.429 [main] WARN  [o.a.c.loader.WebappClassLoaderBase:173] - log() - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:142)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43) 
2019-11-29 11:03:03.431 [main] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:558] - refresh() - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat 
2019-11-29 11:03:03.472 [main] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener:136] - logMessage() - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2019-11-29 11:03:03.481 [main] ERROR [o.s.b.d.LoggingFailureAnalysisReporter:40] - report() - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).
 
2019-11-29 11:04:12.202 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6733ddd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:04:12.397 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 11:04:13.449 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 11:04:13.686 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 11:04:13.690 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 11:04:13.720 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 12ms. Found 0 repository interfaces. 
2019-11-29 11:04:13.862 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:04:13.876 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:04:14.051 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=1a7328e5-f036-3487-b999-660613326de6 
2019-11-29 11:04:14.234 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:04:14.471 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:04:14.477 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:04:14.596 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:04:14.683 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:04:14.689 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$877e04fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:04:14.738 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6733ddd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:04:15.062 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 11:04:15.072 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:04:15.073 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 11:04:15.073 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 11:04:15.191 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 11:04:15.191 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2770 ms 
2019-11-29 11:04:15.317 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 11:04:15.318 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 11:04:15.336 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6ec3d8e4 
2019-11-29 11:04:15.511 [main] ERROR [o.s.b.w.e.tomcat.TomcatStarter:61] - onStartup() - Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dbHealthContributor' defined in class path resource [org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthContributorAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributor]: Factory method 'dbHealthContributor' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class 
2019-11-29 11:04:15.543 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Stopping service [Tomcat] 
2019-11-29 11:04:15.557 [main] WARN  [o.a.c.loader.WebappClassLoaderBase:173] - log() - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:142)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43) 
2019-11-29 11:04:15.561 [main] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:558] - refresh() - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat 
2019-11-29 11:04:15.591 [main] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener:136] - logMessage() - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2019-11-29 11:04:15.599 [main] ERROR [o.s.b.d.LoggingFailureAnalysisReporter:40] - report() - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).
 
2019-11-29 11:29:55.163 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$12e6c3d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:29:55.789 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 11:29:57.800 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 11:29:58.019 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 11:29:58.023 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 11:29:58.054 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces. 
2019-11-29 11:29:58.203 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:29:58.218 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:29:58.476 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=68d86dc9-6b03-3e17-b18b-56d179b55f04 
2019-11-29 11:29:58.733 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:29:59.048 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:29:59.054 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:29:59.207 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:29:59.333 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:29:59.340 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$3330eafc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:29:59.393 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$12e6c3d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:29:59.950 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 11:29:59.963 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:29:59.976 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 11:29:59.976 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 11:30:00.171 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 11:30:00.171 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 4324 ms 
2019-11-29 11:30:00.307 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 11:30:00.308 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 11:30:00.341 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1530d0f2 
2019-11-29 11:30:09.129 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 11:30:09.603 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 11:30:09.679 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 11:30:09.680 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 11:30:09.899 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 11:30:15.989 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 11:30:16.086 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 11:30:17.488 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 11:30:19.791 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 11:30:23.475 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 11:30:23.475 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 11:30:25.337 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 11:30:25.353 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 11:30:26.369 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 11:30:26.590 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 11:30:26.590 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 11:30:26.590 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 11:30:26.590 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 11:30:26.590 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 11:30:26.591 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 11:30:26.591 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 11:30:30.964 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 11:30:30.976 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 11:30:30.979 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 11:30:30.985 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1574998230983 with initial instances count: 1 
2019-11-29 11:30:30.989 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 11:30:30.991 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1574998230991, current=UP, previous=STARTING] 
2019-11-29 11:30:30.993 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 11:30:30.994 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 11:30:31.080 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 11:30:31.162 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 11:30:31.359 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 11:30:31.953 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 11:30:31.955 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 11:30:31.957 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 11:30:32.268 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:30:32.770 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 11:30:32.771 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 11:30:32.847 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 39.736 seconds (JVM running for 42.462)
2019-11-29 11:35:26.611 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 11:40:26.631 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 11:42:17.661 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae988da0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:42:17.999 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 11:42:20.309 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 11:42:20.627 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 11:42:20.632 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 11:42:20.664 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 11ms. Found 0 repository interfaces. 
2019-11-29 11:42:20.821 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:42:20.839 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:42:21.108 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=68d86dc9-6b03-3e17-b18b-56d179b55f04 
2019-11-29 11:42:21.369 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:42:22.002 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:42:22.009 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:42:22.151 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:42:22.260 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:42:22.273 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$cee2b4c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:42:22.356 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae988da0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:42:22.812 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 11:42:22.827 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:42:22.828 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 11:42:22.828 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 11:42:23.031 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 11:42:23.032 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 5008 ms 
2019-11-29 11:42:23.232 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 11:42:23.233 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 11:42:23.249 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@30c8c6ab 
2019-11-29 11:42:26.307 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 11:42:26.633 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 11:42:26.809 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 11:42:26.809 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 11:42:26.960 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 11:42:28.015 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 11:42:28.029 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 11:42:28.065 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 11:42:28.103 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 11:42:28.240 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 11:42:28.241 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 11:42:28.406 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 11:42:28.407 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 11:42:28.816 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 11:42:28.865 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 11:42:28.865 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 11:42:28.866 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 11:42:28.866 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 11:42:28.866 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 11:42:28.866 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 11:42:28.867 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 11:42:29.381 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 11:42:29.385 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 11:42:29.388 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 11:42:29.394 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1574998949392 with initial instances count: 2 
2019-11-29 11:42:29.398 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 11:42:29.398 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1574998949398, current=UP, previous=STARTING] 
2019-11-29 11:42:29.400 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 11:42:29.401 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 11:42:29.433 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 11:42:29.529 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 11:42:29.645 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 11:42:30.843 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 11:42:30.844 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 11:42:30.846 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 11:42:31.109 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:42:31.123 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Pausing ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:42:31.123 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Stopping service [Tomcat] 
2019-11-29 11:42:31.290 [main] WARN  [o.a.c.loader.WebappClassLoaderBase:173] - log() - The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
 java.lang.Thread.run(Thread.java:745) 
2019-11-29 11:42:31.291 [main] WARN  [o.a.c.loader.WebappClassLoaderBase:173] - log() - The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
 java.lang.Thread.run(Thread.java:745) 
2019-11-29 11:42:31.291 [main] WARN  [o.a.c.loader.WebappClassLoaderBase:173] - log() - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:142)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43) 
2019-11-29 11:42:31.294 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Stopping ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:42:31.294 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Destroying ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:42:31.297 [main] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener:136] - logMessage() - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2019-11-29 11:42:31.298 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:65] - deregister() - Unregistering application HQ-MULTI-CUSTOMER with eureka with status DOWN 
2019-11-29 11:42:31.298 [main] WARN  [c.netflix.discovery.DiscoveryClient:1321] - notify() - Saw local status change event StatusChangeEvent [timestamp=1574998951298, current=DOWN, previous=UP] 
2019-11-29 11:42:31.298 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 11:42:31.300 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:208] - shutdown() - Shutting down ExecutorService 'applicationTaskExecutor' 
2019-11-29 11:42:31.364 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 11:42:31.438 [main] INFO  [c.netflix.discovery.DiscoveryClient:906] - shutdown() - Shutting down DiscoveryClient ... 
2019-11-29 11:42:34.441 [main] INFO  [c.netflix.discovery.DiscoveryClient:940] - unregister() - Unregistering ... 
2019-11-29 11:42:34.804 [main] INFO  [c.netflix.discovery.DiscoveryClient:942] - unregister() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - deregister  status: 200 
2019-11-29 11:42:34.825 [main] INFO  [c.netflix.discovery.DiscoveryClient:929] - shutdown() - Completed shut down of DiscoveryClient 
2019-11-29 11:42:34.836 [main] ERROR [o.s.b.d.LoggingFailureAnalysisReporter:40] - report() - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8013 was already in use.

Action:

Identify and stop the process that's listening on port 8013 or configure this application to listen on another port.
 
2019-11-29 11:42:36.358 [DiscoveryClient-HeartbeatExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:868] - renew() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - Re-registering apps/HQ-MULTI-CUSTOMER 
2019-11-29 11:42:36.359 [DiscoveryClient-HeartbeatExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 11:42:36.363 [DiscoveryClient-HeartbeatExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 11:56:06.685 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9a7445e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:56:06.927 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 11:56:08.181 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 11:56:08.397 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 11:56:08.399 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 11:56:08.429 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 13ms. Found 0 repository interfaces. 
2019-11-29 11:56:08.581 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:56:08.595 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 11:56:08.785 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=68d86dc9-6b03-3e17-b18b-56d179b55f04 
2019-11-29 11:56:08.987 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:56:09.239 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:56:09.245 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:56:09.335 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:56:09.404 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:56:09.408 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$babe6d08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:56:09.451 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9a7445e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 11:56:09.727 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 11:56:09.737 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:56:09.737 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 11:56:09.738 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 11:56:09.844 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 11:56:09.844 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2889 ms 
2019-11-29 11:56:09.945 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 11:56:09.945 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 11:56:09.957 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6f68756d 
2019-11-29 11:56:11.309 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 11:56:11.407 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 11:56:11.477 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 11:56:11.478 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 11:56:11.633 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 11:56:12.380 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 11:56:12.395 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 11:56:12.433 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 11:56:12.469 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 11:56:12.631 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 11:56:12.632 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 11:56:12.772 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 11:56:12.772 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 11:56:13.126 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 11:56:13.158 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 11:56:13.158 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 11:56:13.159 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 11:56:13.159 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 11:56:13.159 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 11:56:13.159 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 11:56:13.159 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 11:56:13.635 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 11:56:13.638 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 11:56:13.640 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 11:56:13.645 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1574999773644 with initial instances count: 1 
2019-11-29 11:56:13.649 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 11:56:13.650 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1574999773650, current=UP, previous=STARTING] 
2019-11-29 11:56:13.651 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 11:56:13.652 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 11:56:13.682 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 11:56:13.739 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 11:56:13.785 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 11:56:14.006 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 11:56:14.008 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 11:56:14.009 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 11:56:14.051 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 11:56:14.074 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 11:56:14.075 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 11:56:14.098 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 8.245 seconds (JVM running for 12.142)
2019-11-29 11:57:42.389 [http-nio-8013-exec-1] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2019-11-29 11:57:42.389 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:525] - initServletBean() - Initializing Servlet 'dispatcherServlet' 
2019-11-29 11:57:42.398 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:547] - initServletBean() - Completed initialization in 9 ms 
2019-11-29 11:57:42.726 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 11:57:42.738 [hystrix-hq-multi-provider-1] INFO  [c.n.u.c.ShutdownEnabledTimer:58] - <init>() - Shutdown hook installed for: NFLoadBalancer-PingTimer-hq-multi-provider 
2019-11-29 11:57:42.739 [hystrix-hq-multi-provider-1] INFO  [c.n.loadbalancer.BaseLoadBalancer:197] - initWithConfig() - Client: hq-multi-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
2019-11-29 11:57:42.745 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:222] - enableAndInitLearnNewServersFeature() - Using serverListUpdater PollingServerListUpdater 
2019-11-29 11:57:42.758 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 11:57:42.760 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:150] - restOfInit() - DynamicServerListLoadBalancer for client hq-multi-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[10.0.133.131:8011],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.0.133.131:8011;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2125ac65 
2019-11-29 11:57:43.752 [PollingServerListUpdater-0] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 12:02:13.047 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bbf59cc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:02:13.293 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 12:02:14.459 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 12:02:14.660 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 12:02:14.663 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 12:02:14.690 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 10ms. Found 0 repository interfaces. 
2019-11-29 12:02:14.811 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 12:02:14.824 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 12:02:14.981 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=68d86dc9-6b03-3e17-b18b-56d179b55f04 
2019-11-29 12:02:15.157 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:02:15.293 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:02:15.299 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:02:15.491 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:02:15.572 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:02:15.576 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$dc3fc3e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:02:15.609 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bbf59cc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:02:15.872 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 12:02:15.884 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 12:02:15.884 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 12:02:15.884 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 12:02:15.993 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 12:02:15.993 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2681 ms 
2019-11-29 12:02:16.110 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 12:02:16.111 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 12:02:16.123 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5bb99d1d 
2019-11-29 12:02:17.316 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 12:02:17.402 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 12:02:17.451 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 12:02:17.451 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 12:02:17.642 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 12:02:18.272 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 12:02:18.288 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 12:02:18.329 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 12:02:18.366 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 12:02:18.498 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 12:02:18.498 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 12:02:18.649 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 12:02:18.649 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 12:02:18.923 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 12:02:18.956 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 12:02:18.957 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 12:02:18.957 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 12:02:18.957 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 12:02:18.957 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 12:02:18.957 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 12:02:18.957 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 12:02:19.214 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 12:02:19.217 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 12:02:19.220 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 12:02:19.228 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1575000139227 with initial instances count: 2 
2019-11-29 12:02:19.232 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 12:02:19.232 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1575000139232, current=UP, previous=STARTING] 
2019-11-29 12:02:19.234 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 12:02:19.235 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 12:02:19.477 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 12:02:19.487 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 12:02:19.526 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 12:02:19.678 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 12:02:19.680 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 12:02:19.682 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 12:02:19.714 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 12:02:19.743 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 12:02:19.744 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 12:02:19.765 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 7.992 seconds (JVM running for 9.026)
2019-11-29 12:03:13.684 [http-nio-8013-exec-1] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2019-11-29 12:03:13.685 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:525] - initServletBean() - Initializing Servlet 'dispatcherServlet' 
2019-11-29 12:03:13.694 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:547] - initServletBean() - Completed initialization in 9 ms 
2019-11-29 12:03:14.018 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 12:03:14.032 [hystrix-hq-multi-provider-1] INFO  [c.n.u.c.ShutdownEnabledTimer:58] - <init>() - Shutdown hook installed for: NFLoadBalancer-PingTimer-hq-multi-provider 
2019-11-29 12:03:14.033 [hystrix-hq-multi-provider-1] INFO  [c.n.loadbalancer.BaseLoadBalancer:197] - initWithConfig() - Client: hq-multi-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
2019-11-29 12:03:14.040 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:222] - enableAndInitLearnNewServersFeature() - Using serverListUpdater PollingServerListUpdater 
2019-11-29 12:03:14.054 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 12:03:14.056 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:150] - restOfInit() - DynamicServerListLoadBalancer for client hq-multi-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[10.0.133.131:8011],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.0.133.131:8011;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@76f4bd2c 
2019-11-29 12:03:15.046 [PollingServerListUpdater-0] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 12:07:18.967 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 12:08:28.639 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$428adc14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:08:28.858 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 12:08:30.099 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 12:08:30.284 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 12:08:30.286 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 12:08:30.310 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 10ms. Found 0 repository interfaces. 
2019-11-29 12:08:30.438 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 12:08:30.451 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 12:08:30.599 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=68d86dc9-6b03-3e17-b18b-56d179b55f04 
2019-11-29 12:08:30.761 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:08:31.042 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:08:31.047 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:08:31.141 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:08:31.214 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:08:31.218 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$62d5033a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:08:31.250 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$428adc14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 12:08:31.526 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 12:08:31.536 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 12:08:31.537 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 12:08:31.537 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 12:08:31.642 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 12:08:31.642 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2746 ms 
2019-11-29 12:08:31.766 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 12:08:31.766 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 12:08:31.784 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@69ba72da 
2019-11-29 12:08:33.427 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 12:08:33.505 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 12:08:33.553 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 12:08:33.554 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 12:08:33.744 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 12:08:34.445 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 12:08:34.466 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 12:08:34.506 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 12:08:34.543 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 12:08:34.674 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 12:08:34.674 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 12:08:35.011 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 12:08:35.012 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 12:08:35.499 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 12:08:35.563 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 12:08:35.563 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 12:08:35.563 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 12:08:35.563 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 12:08:35.563 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 12:08:35.564 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 12:08:35.564 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 12:08:37.753 [main] ERROR [c.n.d.s.t.d.RedirectingEurekaHttpClient:83] - execute() - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://root:123456@localhost:8001/eureka/} 
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:430)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:276)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:272)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$49f3d533.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$49f3d533$$FastClassBySpringCGLIB$$1ca8e985.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$49f3d533.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:640)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:625)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$779/274059873.getObject(Unknown Source)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:279)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$4a2962c8.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:894)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.hq.multi.HqMultiCustomerApplication.main(HqMultiCustomerApplication.java:17)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 81 common frames omitted
2019-11-29 12:08:37.768 [main] WARN  [c.n.d.s.t.d.RetryableEurekaHttpClient:130] - execute() - Request execution failed with message: java.net.ConnectException: Connection refused: connect 
2019-11-29 12:08:39.827 [main] ERROR [c.n.d.s.t.d.RedirectingEurekaHttpClient:83] - execute() - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://root:123456@localhost:8002/eureka/} 
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:430)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:276)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:272)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$49f3d533.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$49f3d533$$FastClassBySpringCGLIB$$1ca8e985.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$49f3d533.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:640)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:625)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$779/274059873.getObject(Unknown Source)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:279)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$4a2962c8.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:894)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.hq.multi.HqMultiCustomerApplication.main(HqMultiCustomerApplication.java:17)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 81 common frames omitted
2019-11-29 12:08:39.832 [main] WARN  [c.n.d.s.t.d.RetryableEurekaHttpClient:130] - execute() - Request execution failed with message: java.net.ConnectException: Connection refused: connect 
2019-11-29 12:08:39.833 [main] ERROR [c.netflix.discovery.DiscoveryClient:990] - fetchRegistry() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - was unable to refresh its cache! status = Cannot execute request on any known server 
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:430)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:276)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:272)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$49f3d533.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$49f3d533$$FastClassBySpringCGLIB$$1ca8e985.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$49f3d533.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:640)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:625)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$779/274059873.getObject(Unknown Source)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:279)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$4a2962c8.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:894)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.hq.multi.HqMultiCustomerApplication.main(HqMultiCustomerApplication.java:17)
2019-11-29 12:08:39.836 [main] WARN  [c.netflix.discovery.DiscoveryClient:297] - get() - Using default backup registry implementation which does not do anything. 
2019-11-29 12:08:39.840 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 12:08:39.850 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 12:08:39.896 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1575000519882 with initial instances count: 0 
2019-11-29 12:08:39.902 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 12:08:39.904 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1575000519904, current=UP, previous=STARTING] 
2019-11-29 12:08:39.906 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 12:08:39.939 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 12:08:39.947 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 12:08:40.561 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 12:08:40.852 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 12:08:40.854 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 12:08:40.859 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 12:08:40.947 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 12:08:41.022 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 12:08:41.024 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 12:08:41.099 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 13.947 seconds (JVM running for 15.434)
2019-11-29 12:08:42.618 [DiscoveryClient-InstanceInfoReplicator-0] ERROR [c.n.d.s.t.d.RedirectingEurekaHttpClient:83] - execute() - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://root:123456@localhost:8001/eureka/} 
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2019-11-29 12:08:42.621 [DiscoveryClient-InstanceInfoReplicator-0] WARN  [c.n.d.s.t.d.RetryableEurekaHttpClient:130] - execute() - Request execution failed with message: java.net.ConnectException: Connection refused: connect 
2019-11-29 12:08:43.923 [DiscoveryClient-HeartbeatExecutor-0] ERROR [c.n.d.s.t.d.RedirectingEurekaHttpClient:83] - execute() - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://root:123456@localhost:8001/eureka/} 
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2019-11-29 12:08:43.925 [DiscoveryClient-1] WARN  [c.n.discovery.TimedSupervisorTask:71] - run() - task supervisor timed out 
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:66)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-11-29 12:08:43.928 [DiscoveryClient-HeartbeatExecutor-0] WARN  [c.n.d.s.t.d.RetryableEurekaHttpClient:130] - execute() - Request execution failed with message: java.net.ConnectException: Connection refused: connect 
2019-11-29 12:08:44.623 [DiscoveryClient-InstanceInfoReplicator-0] ERROR [c.n.d.s.t.d.RedirectingEurekaHttpClient:83] - execute() - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://root:123456@localhost:8002/eureka/} 
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2019-11-29 12:08:44.627 [DiscoveryClient-InstanceInfoReplicator-0] WARN  [c.n.d.s.t.d.RetryableEurekaHttpClient:130] - execute() - Request execution failed with message: java.net.ConnectException: Connection refused: connect 
2019-11-29 12:08:44.627 [DiscoveryClient-InstanceInfoReplicator-0] WARN  [c.netflix.discovery.DiscoveryClient:849] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration failed Cannot execute request on any known server 
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-11-29 12:08:44.627 [DiscoveryClient-InstanceInfoReplicator-0] WARN  [c.n.discovery.InstanceInfoReplicator:125] - run() - There was a problem with the instance info replicator 
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-11-29 12:08:45.928 [DiscoveryClient-HeartbeatExecutor-0] ERROR [c.n.d.s.t.d.RedirectingEurekaHttpClient:83] - execute() - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://root:123456@localhost:8002/eureka/} 
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2019-11-29 12:08:45.932 [DiscoveryClient-HeartbeatExecutor-0] WARN  [c.n.d.s.t.d.RetryableEurekaHttpClient:130] - execute() - Request execution failed with message: java.net.ConnectException: Connection refused: connect 
2019-11-29 12:08:45.932 [DiscoveryClient-HeartbeatExecutor-0] ERROR [c.netflix.discovery.DiscoveryClient:878] - renew() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - was unable to send heartbeat! 
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-11-29 12:08:49.930 [DiscoveryClient-1] WARN  [c.n.discovery.TimedSupervisorTask:71] - run() - task supervisor timed out 
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:66)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-11-29 12:08:49.933 [DiscoveryClient-HeartbeatExecutor-0] ERROR [c.n.d.s.t.d.RedirectingEurekaHttpClient:83] - execute() - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://root:123456@localhost:8001/eureka/} 
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2019-11-29 12:08:49.938 [DiscoveryClient-HeartbeatExecutor-0] WARN  [c.n.d.s.t.d.RetryableEurekaHttpClient:130] - execute() - Request execution failed with message: java.net.ConnectException: Connection refused: connect 
2019-11-29 12:08:51.941 [DiscoveryClient-HeartbeatExecutor-0] ERROR [c.n.d.s.t.d.RedirectingEurekaHttpClient:83] - execute() - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://root:123456@localhost:8002/eureka/} 
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2019-11-29 12:08:51.943 [DiscoveryClient-HeartbeatExecutor-0] WARN  [c.n.d.s.t.d.RetryableEurekaHttpClient:130] - execute() - Request execution failed with message: java.net.ConnectException: Connection refused: connect 
2019-11-29 12:08:51.944 [DiscoveryClient-HeartbeatExecutor-0] ERROR [c.netflix.discovery.DiscoveryClient:878] - renew() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - was unable to send heartbeat! 
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-11-29 12:08:59.932 [DiscoveryClient-1] WARN  [c.n.discovery.TimedSupervisorTask:71] - run() - task supervisor timed out 
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:66)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-11-29 12:08:59.943 [DiscoveryClient-HeartbeatExecutor-0] ERROR [c.n.d.s.t.d.RedirectingEurekaHttpClient:83] - execute() - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://root:123456@localhost:8001/eureka/} 
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2019-11-29 12:08:59.948 [DiscoveryClient-HeartbeatExecutor-0] WARN  [c.n.d.s.t.d.RetryableEurekaHttpClient:130] - execute() - Request execution failed with message: java.net.ConnectException: Connection refused: connect 
2019-11-29 12:09:01.951 [DiscoveryClient-HeartbeatExecutor-0] ERROR [c.n.d.s.t.d.RedirectingEurekaHttpClient:83] - execute() - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://root:123456@localhost:8002/eureka/} 
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2019-11-29 12:09:02.103 [DiscoveryClient-HeartbeatExecutor-0] WARN  [c.n.d.s.t.d.RetryableEurekaHttpClient:130] - execute() - Request execution failed with message: java.net.ConnectException: Connection refused: connect 
2019-11-29 12:09:02.103 [DiscoveryClient-HeartbeatExecutor-0] ERROR [c.netflix.discovery.DiscoveryClient:878] - renew() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - was unable to send heartbeat! 
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-11-29 14:01:22.366 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f1f14fba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:01:22.553 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 14:01:23.440 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 14:01:23.627 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 14:01:23.629 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 14:01:23.653 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces. 
2019-11-29 14:01:23.773 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 14:01:23.786 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 14:01:23.930 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=68d86dc9-6b03-3e17-b18b-56d179b55f04 
2019-11-29 14:01:24.087 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:01:24.304 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:01:24.310 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:01:24.410 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:01:24.477 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:01:24.481 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$123b76e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:01:24.514 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f1f14fba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:01:24.807 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 14:01:24.818 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 14:01:24.819 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 14:01:24.819 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 14:01:24.941 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 14:01:24.941 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2369 ms 
2019-11-29 14:01:25.044 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 14:01:25.044 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 14:01:25.057 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1533338c 
2019-11-29 14:01:26.162 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 14:01:26.242 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 14:01:26.288 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 14:01:26.288 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 14:01:26.447 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 14:01:27.003 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 14:01:27.021 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 14:01:27.061 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 14:01:27.102 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 14:01:27.253 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 14:01:27.254 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 14:01:27.418 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 14:01:27.419 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 14:01:27.731 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 14:01:27.771 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 14:01:27.771 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 14:01:27.771 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 14:01:27.771 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 14:01:27.772 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 14:01:27.772 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 14:01:27.772 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 14:01:28.219 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 14:01:28.221 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 14:01:28.224 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 14:01:28.228 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1575007288227 with initial instances count: 0 
2019-11-29 14:01:28.232 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 14:01:28.233 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1575007288233, current=UP, previous=STARTING] 
2019-11-29 14:01:28.235 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 14:01:28.236 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 14:01:28.258 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 14:01:28.297 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 14:01:28.308 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 14:01:28.478 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 14:01:28.481 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 14:01:28.483 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 14:01:28.518 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 14:01:28.549 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 14:01:28.550 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 14:01:28.570 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 7.613 seconds (JVM running for 8.792)
2019-11-29 14:01:58.224 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 14:01:58.224 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 14:01:58.225 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 14:01:58.225 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 14:01:58.225 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 14:01:58.226 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: false 
2019-11-29 14:01:58.226 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 14:01:58.286 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 14:02:29.447 [http-nio-8013-exec-1] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2019-11-29 14:02:29.448 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:525] - initServletBean() - Initializing Servlet 'dispatcherServlet' 
2019-11-29 14:02:29.456 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:547] - initServletBean() - Completed initialization in 8 ms 
2019-11-29 14:02:29.775 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 14:02:29.787 [hystrix-hq-multi-provider-1] INFO  [c.n.u.c.ShutdownEnabledTimer:58] - <init>() - Shutdown hook installed for: NFLoadBalancer-PingTimer-hq-multi-provider 
2019-11-29 14:02:29.788 [hystrix-hq-multi-provider-1] INFO  [c.n.loadbalancer.BaseLoadBalancer:197] - initWithConfig() - Client: hq-multi-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
2019-11-29 14:02:29.794 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:222] - enableAndInitLearnNewServersFeature() - Using serverListUpdater PollingServerListUpdater 
2019-11-29 14:02:29.798 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:150] - restOfInit() - DynamicServerListLoadBalancer for client hq-multi-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@59d70c7c 
2019-11-29 14:03:00.811 [PollingServerListUpdater-0] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 14:03:17.857 [DiscoveryClient-0] WARN  [c.n.discovery.TimedSupervisorTask:71] - run() - task supervisor timed out 
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:66)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-11-29 14:06:27.783 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 14:10:39.997 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f1f14fba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:10:40.232 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 14:10:41.179 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 14:10:41.352 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 14:10:41.354 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 14:10:41.377 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 8ms. Found 0 repository interfaces. 
2019-11-29 14:10:41.523 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 14:10:41.538 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 14:10:41.686 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=68d86dc9-6b03-3e17-b18b-56d179b55f04 
2019-11-29 14:10:41.875 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:10:42.091 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:10:42.099 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:10:42.198 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:10:42.271 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:10:42.274 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$123b76e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:10:42.309 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f1f14fba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:10:42.608 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 14:10:42.618 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 14:10:42.619 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 14:10:42.619 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 14:10:42.727 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 14:10:42.728 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2472 ms 
2019-11-29 14:10:42.831 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 14:10:42.832 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 14:10:42.845 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@365e65bb 
2019-11-29 14:10:44.019 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 14:10:44.098 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 14:10:44.144 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 14:10:44.144 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 14:10:44.286 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 14:10:44.817 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 14:10:44.831 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 14:10:44.866 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 14:10:44.902 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 14:10:45.027 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 14:10:45.027 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 14:10:45.265 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 14:10:45.265 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 14:10:45.540 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 14:10:45.571 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 14:10:45.572 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 14:10:45.572 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 14:10:45.572 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 14:10:45.572 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 14:10:45.572 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 14:10:45.572 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 14:10:46.053 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 14:10:46.056 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 14:10:46.059 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 14:10:46.063 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1575007846062 with initial instances count: 2 
2019-11-29 14:10:46.067 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 14:10:46.068 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1575007846068, current=UP, previous=STARTING] 
2019-11-29 14:10:46.070 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 14:10:46.070 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 14:10:46.094 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 14:10:46.104 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 14:10:46.132 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 14:10:46.283 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 14:10:46.285 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 14:10:46.287 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 14:10:46.341 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 14:10:46.369 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 14:10:46.370 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 14:10:46.390 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 7.782 seconds (JVM running for 8.858)
2019-11-29 14:11:48.718 [http-nio-8013-exec-2] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2019-11-29 14:11:48.718 [http-nio-8013-exec-2] INFO  [o.s.web.servlet.DispatcherServlet:525] - initServletBean() - Initializing Servlet 'dispatcherServlet' 
2019-11-29 14:11:48.725 [http-nio-8013-exec-2] INFO  [o.s.web.servlet.DispatcherServlet:547] - initServletBean() - Completed initialization in 7 ms 
2019-11-29 14:11:54.065 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 14:11:54.081 [hystrix-hq-multi-provider-1] INFO  [c.n.u.c.ShutdownEnabledTimer:58] - <init>() - Shutdown hook installed for: NFLoadBalancer-PingTimer-hq-multi-provider 
2019-11-29 14:11:54.082 [hystrix-hq-multi-provider-1] INFO  [c.n.loadbalancer.BaseLoadBalancer:197] - initWithConfig() - Client: hq-multi-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
2019-11-29 14:11:54.089 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:222] - enableAndInitLearnNewServersFeature() - Using serverListUpdater PollingServerListUpdater 
2019-11-29 14:11:54.106 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 14:11:54.108 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:150] - restOfInit() - DynamicServerListLoadBalancer for client hq-multi-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[10.0.133.131:8011],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.0.133.131:8011;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@446f4824 
2019-11-29 14:11:55.094 [PollingServerListUpdater-0] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 14:15:45.583 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 14:17:41.138 [background-preinit] DEBUG [o.h.v.m.ResourceBundleMessageInterpolator:89] - buildExpressionFactory() - Loaded expression factory via original TCCL 
2019-11-29 14:17:41.576 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$97dd64d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:17:41.774 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 14:17:42.672 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 14:17:42.858 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 14:17:42.860 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 14:17:42.885 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 8ms. Found 0 repository interfaces. 
2019-11-29 14:17:43.019 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 14:17:43.034 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 14:17:43.189 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=68d86dc9-6b03-3e17-b18b-56d179b55f04 
2019-11-29 14:17:43.354 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:17:43.572 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:17:43.578 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:17:43.669 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:17:43.738 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:17:43.743 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$b8278bf8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:17:43.774 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$97dd64d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:17:44.086 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 14:17:44.099 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 14:17:44.100 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 14:17:44.100 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 14:17:44.209 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 14:17:44.209 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2403 ms 
2019-11-29 14:17:44.319 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 14:17:44.319 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 14:17:44.338 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6076c66 
2019-11-29 14:17:45.602 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 14:17:45.683 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 14:17:45.730 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 14:17:45.731 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 14:17:45.871 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 14:17:46.454 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 14:17:46.468 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 14:17:46.503 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 14:17:46.543 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 14:17:46.701 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 14:17:46.702 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 14:17:46.848 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 14:17:46.848 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 14:17:47.130 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 14:17:47.163 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 14:17:47.163 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 14:17:47.163 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 14:17:47.163 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 14:17:47.163 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 14:17:47.163 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 14:17:47.164 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 14:17:47.661 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 14:17:47.664 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 14:17:47.667 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 14:17:47.672 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1575008267671 with initial instances count: 3 
2019-11-29 14:17:47.675 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 14:17:47.676 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1575008267676, current=UP, previous=STARTING] 
2019-11-29 14:17:47.678 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 14:17:47.679 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 14:17:47.708 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 14:17:47.721 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 14:17:47.762 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 14:17:47.940 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 14:17:47.941 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 14:17:47.943 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 14:17:47.974 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 14:17:48.000 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 14:17:48.001 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 14:17:48.020 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 7.602 seconds (JVM running for 8.989)
2019-11-29 14:17:53.060 [http-nio-8013-exec-1] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2019-11-29 14:17:53.060 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:525] - initServletBean() - Initializing Servlet 'dispatcherServlet' 
2019-11-29 14:17:53.068 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:547] - initServletBean() - Completed initialization in 8 ms 
2019-11-29 14:17:53.404 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 14:17:53.417 [hystrix-hq-multi-provider-1] INFO  [c.n.u.c.ShutdownEnabledTimer:58] - <init>() - Shutdown hook installed for: NFLoadBalancer-PingTimer-hq-multi-provider 
2019-11-29 14:17:53.418 [hystrix-hq-multi-provider-1] INFO  [c.n.loadbalancer.BaseLoadBalancer:197] - initWithConfig() - Client: hq-multi-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
2019-11-29 14:17:53.424 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:222] - enableAndInitLearnNewServersFeature() - Using serverListUpdater PollingServerListUpdater 
2019-11-29 14:17:53.437 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 14:17:53.439 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:150] - restOfInit() - DynamicServerListLoadBalancer for client hq-multi-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[10.0.133.131:8011],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.0.133.131:8011;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3f6a2fee 
2019-11-29 14:17:54.428 [PollingServerListUpdater-0] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 14:22:47.175 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 14:27:47.184 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 14:32:47.193 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 14:37:47.202 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 14:42:47.210 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 14:47:47.219 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 14:51:45.104 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f34ab5eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:51:45.288 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 14:51:46.165 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 14:51:46.347 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 14:51:46.349 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 14:51:46.373 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces. 
2019-11-29 14:51:46.502 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 14:51:46.516 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 14:51:46.671 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=68d86dc9-6b03-3e17-b18b-56d179b55f04 
2019-11-29 14:51:46.858 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:51:47.059 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:51:47.065 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:51:47.170 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:51:47.242 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:51:47.245 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$1394dd11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:51:47.278 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f34ab5eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:51:47.550 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 14:51:47.560 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 14:51:47.561 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 14:51:47.561 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 14:51:47.668 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 14:51:47.668 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2360 ms 
2019-11-29 14:51:47.771 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 14:51:47.772 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 14:51:47.786 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5ae66c98 
2019-11-29 14:51:48.979 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 14:51:49.062 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 14:51:49.108 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 14:51:49.108 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 14:51:49.255 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 14:51:49.818 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 14:51:49.832 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 14:51:49.876 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 14:51:49.918 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 14:51:50.044 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 14:51:50.044 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 14:51:50.203 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 14:51:50.203 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 14:51:50.480 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 14:51:50.517 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 14:51:50.517 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 14:51:50.518 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 14:51:50.518 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 14:51:50.518 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 14:51:50.518 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 14:51:50.518 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 14:51:50.989 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 14:51:50.992 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 14:51:50.995 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 14:51:50.999 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1575010310998 with initial instances count: 0 
2019-11-29 14:51:51.003 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 14:51:51.004 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1575010311004, current=UP, previous=STARTING] 
2019-11-29 14:51:51.006 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 14:51:51.007 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 14:51:51.031 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 14:51:51.070 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 14:51:51.076 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 14:51:51.226 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 14:51:51.228 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 14:51:51.230 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 14:51:51.264 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 14:51:51.294 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 14:51:51.295 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 14:51:51.318 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 7.057 seconds (JVM running for 9.097)
2019-11-29 14:52:20.993 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 14:52:20.993 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 14:52:20.993 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 14:52:20.993 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 14:52:20.993 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 14:52:20.994 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: false 
2019-11-29 14:52:20.994 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 14:52:21.037 [DiscoveryClient-CacheRefreshExecutor-0] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 14:52:29.024 [http-nio-8013-exec-1] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2019-11-29 14:52:29.024 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:525] - initServletBean() - Initializing Servlet 'dispatcherServlet' 
2019-11-29 14:52:29.033 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:547] - initServletBean() - Completed initialization in 9 ms 
2019-11-29 14:52:29.374 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 14:52:29.389 [hystrix-hq-multi-provider-1] INFO  [c.n.u.c.ShutdownEnabledTimer:58] - <init>() - Shutdown hook installed for: NFLoadBalancer-PingTimer-hq-multi-provider 
2019-11-29 14:52:29.390 [hystrix-hq-multi-provider-1] INFO  [c.n.loadbalancer.BaseLoadBalancer:197] - initWithConfig() - Client: hq-multi-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
2019-11-29 14:52:29.396 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:222] - enableAndInitLearnNewServersFeature() - Using serverListUpdater PollingServerListUpdater 
2019-11-29 14:52:29.400 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:150] - restOfInit() - DynamicServerListLoadBalancer for client hq-multi-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4ccb9a9d 
2019-11-29 14:53:00.436 [PollingServerListUpdater-0] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 14:58:22.935 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$da63a7c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:58:23.120 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 14:58:23.993 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 14:58:24.163 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 14:58:24.166 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 14:58:24.193 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 10ms. Found 0 repository interfaces. 
2019-11-29 14:58:24.319 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 14:58:24.332 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 14:58:24.474 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=a86e256f-edd3-3b88-8bd6-c86f4a57bef7 
2019-11-29 14:58:24.632 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:58:24.846 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:58:24.851 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:58:24.947 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:58:25.016 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:58:25.020 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$faadceef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:58:25.054 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$da63a7c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 14:58:25.313 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 14:58:25.323 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 14:58:25.324 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 14:58:25.324 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 14:58:25.429 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 14:58:25.429 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2291 ms 
2019-11-29 14:58:25.537 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 14:58:25.538 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 14:58:25.554 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@273293c8 
2019-11-29 14:58:25.715 [main] ERROR [o.s.b.w.e.tomcat.TomcatStarter:61] - onStartup() - Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dbHealthContributor' defined in class path resource [org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthContributorAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributor]: Factory method 'dbHealthContributor' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class 
2019-11-29 14:58:25.761 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Stopping service [Tomcat] 
2019-11-29 14:58:25.775 [main] WARN  [o.a.c.loader.WebappClassLoaderBase:173] - log() - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:142)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43) 
2019-11-29 14:58:25.777 [main] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:558] - refresh() - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat 
2019-11-29 14:58:25.805 [main] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener:136] - logMessage() - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2019-11-29 14:58:25.813 [main] ERROR [o.s.b.d.LoggingFailureAnalysisReporter:40] - report() - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).
 
2019-11-29 15:01:13.001 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6946965b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:01:13.173 [main] INFO  [com.hq.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default
2019-11-29 15:01:14.018 [main] WARN  [o.m.s.mapper.ClassPathMapperScanner:166] - doScan() - No MyBatis mapper was found in '[com.hq]' package. Please check your configuration. 
2019-11-29 15:01:14.204 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 15:01:14.206 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 15:01:14.229 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces. 
2019-11-29 15:01:14.344 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 15:01:14.357 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 15:01:14.491 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=a86e256f-edd3-3b88-8bd6-c86f4a57bef7 
2019-11-29 15:01:14.644 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:01:14.853 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:01:14.858 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:01:14.949 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:01:15.019 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:01:15.023 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$8990bd81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:01:15.053 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6946965b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:01:15.309 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 15:01:15.321 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 15:01:15.321 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 15:01:15.321 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 15:01:15.473 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 15:01:15.474 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2281 ms 
2019-11-29 15:01:15.619 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 15:01:15.619 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 15:01:15.638 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@517a46f3 
2019-11-29 15:01:15.910 [main] ERROR [o.s.b.w.e.tomcat.TomcatStarter:61] - onStartup() - Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dbHealthContributor' defined in class path resource [org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthContributorAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributor]: Factory method 'dbHealthContributor' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class 
2019-11-29 15:01:15.949 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Stopping service [Tomcat] 
2019-11-29 15:01:15.961 [main] WARN  [o.a.c.loader.WebappClassLoaderBase:173] - log() - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:142)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43) 
2019-11-29 15:01:15.963 [main] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:558] - refresh() - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat 
2019-11-29 15:01:15.997 [main] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener:136] - logMessage() - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2019-11-29 15:01:16.010 [main] ERROR [o.s.b.d.LoggingFailureAnalysisReporter:40] - report() - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).
 
2019-11-29 15:12:38.294 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$692e8560] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:12:38.585 [main] INFO  [c.h.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default 
2019-11-29 15:12:39.715 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 15:12:39.717 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 15:12:39.740 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces. 
2019-11-29 15:12:39.872 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 15:12:39.890 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 15:12:40.060 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=37f555e7-c645-317b-a6c7-1baeb42027df 
2019-11-29 15:12:40.269 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:12:40.561 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:12:40.569 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:12:40.701 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:12:40.786 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:12:40.791 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$8978ac86] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:12:40.826 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$692e8560] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:12:41.082 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 15:12:41.092 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 15:12:41.093 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 15:12:41.093 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 15:12:41.200 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 15:12:41.200 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2587 ms 
2019-11-29 15:12:41.306 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 15:12:41.307 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 15:12:41.321 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5158a9f7 
2019-11-29 15:12:41.486 [main] ERROR [o.s.b.w.e.tomcat.TomcatStarter:61] - onStartup() - Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dbHealthContributor' defined in class path resource [org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthContributorAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributor]: Factory method 'dbHealthContributor' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class 
2019-11-29 15:12:41.513 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Stopping service [Tomcat] 
2019-11-29 15:12:41.526 [main] WARN  [o.a.c.loader.WebappClassLoaderBase:173] - log() - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:142)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43) 
2019-11-29 15:12:41.529 [main] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:558] - refresh() - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat 
2019-11-29 15:12:41.561 [main] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener:136] - logMessage() - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2019-11-29 15:12:41.570 [main] ERROR [o.s.b.d.LoggingFailureAnalysisReporter:40] - report() - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).
 
2019-11-29 15:15:54.283 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e6fbf4d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:15:54.474 [main] INFO  [c.h.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default 
2019-11-29 15:15:55.541 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 15:15:55.546 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 15:15:55.574 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 11ms. Found 0 repository interfaces. 
2019-11-29 15:15:55.687 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 15:15:55.701 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 15:15:55.859 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=394477d9-5957-3cce-908f-1c3f3ec2e0ec 
2019-11-29 15:15:56.025 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:15:56.246 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:15:56.253 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:15:56.357 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:15:56.428 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:15:56.432 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$7461bfb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:15:56.475 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e6fbf4d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:15:56.789 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 15:15:56.799 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 15:15:56.800 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 15:15:56.800 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 15:15:56.906 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 15:15:56.907 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2409 ms 
2019-11-29 15:15:57.016 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 15:15:57.016 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 15:15:57.029 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@377e573a 
2019-11-29 15:15:58.743 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 15:15:58.840 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 15:15:58.885 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 15:15:58.886 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 15:15:59.031 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 15:15:59.447 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 15:15:59.461 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 15:15:59.500 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 15:15:59.541 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 15:15:59.675 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 15:15:59.675 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 15:15:59.815 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 15:15:59.815 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 15:16:00.307 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 15:16:00.341 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 15:16:00.342 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 15:16:00.342 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 15:16:00.342 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 15:16:00.342 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 15:16:00.342 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 15:16:00.342 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 15:16:00.610 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 15:16:00.613 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 15:16:00.616 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 15:16:00.622 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1575011760621 with initial instances count: 2 
2019-11-29 15:16:00.626 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 15:16:00.627 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1575011760627, current=UP, previous=STARTING] 
2019-11-29 15:16:00.629 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 15:16:00.630 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 15:16:00.660 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 15:16:00.666 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 15:16:00.698 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 15:16:00.855 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 15:16:00.857 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 15:16:00.859 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 15:16:00.894 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 15:16:00.920 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 15:16:00.921 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 15:16:00.942 [main] INFO  [c.h.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 7.737 seconds (JVM running for 9.149) 
2019-11-29 15:18:49.825 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4aec2f74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:18:50.028 [main] INFO  [c.h.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default 
2019-11-29 15:18:51.032 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 15:18:51.034 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 15:18:51.054 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 8ms. Found 0 repository interfaces. 
2019-11-29 15:18:51.163 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 15:18:51.182 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 15:18:51.321 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=394477d9-5957-3cce-908f-1c3f3ec2e0ec 
2019-11-29 15:18:51.466 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:18:51.704 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:18:51.710 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:18:51.805 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:18:51.867 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:18:51.871 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$6b36569a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:18:51.901 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4aec2f74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:18:52.148 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 15:18:52.157 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 15:18:52.158 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 15:18:52.158 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 15:18:52.259 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 15:18:52.259 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2211 ms 
2019-11-29 15:18:52.353 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 15:18:52.353 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 15:18:52.370 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3554bdc0 
2019-11-29 15:18:53.700 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 15:18:53.782 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 15:18:53.825 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 15:18:53.825 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 15:18:53.955 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 15:18:54.354 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 15:18:54.367 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 15:18:54.398 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 15:18:54.428 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 15:18:54.539 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 15:18:54.539 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 15:18:54.699 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 15:18:54.700 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 15:18:55.099 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 15:18:55.130 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 15:18:55.130 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 15:18:55.130 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 15:18:55.131 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 15:18:55.131 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 15:18:55.131 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 15:18:55.131 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 15:18:55.371 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 15:18:55.374 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 15:18:55.377 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 15:18:55.382 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1575011935381 with initial instances count: 1 
2019-11-29 15:18:55.389 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 15:18:55.390 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1575011935390, current=UP, previous=STARTING] 
2019-11-29 15:18:55.392 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 15:18:55.392 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 15:18:55.422 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 15:18:55.431 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 15:18:55.470 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 15:18:55.648 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 15:18:55.650 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 15:18:55.653 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 15:18:55.686 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 15:18:55.709 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 15:18:55.711 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 15:18:55.734 [main] INFO  [c.h.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 7.14 seconds (JVM running for 8.408) 
2019-11-29 15:19:08.394 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$75234390] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:19:08.592 [main] INFO  [c.h.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default 
2019-11-29 15:19:09.785 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 15:19:09.787 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 15:19:09.813 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces. 
2019-11-29 15:19:09.944 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 15:19:09.958 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 15:19:10.157 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=394477d9-5957-3cce-908f-1c3f3ec2e0ec 
2019-11-29 15:19:10.338 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:19:10.611 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:19:10.621 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:19:10.734 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:19:10.833 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:19:10.840 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$956d6ab6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:19:10.893 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$75234390] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:19:11.198 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 15:19:11.209 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 15:19:11.210 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 15:19:11.210 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 15:19:11.328 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 15:19:11.328 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2705 ms 
2019-11-29 15:19:11.474 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 15:19:11.475 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 15:19:11.494 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7ee64b53 
2019-11-29 15:19:13.036 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 15:19:13.121 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 15:19:13.168 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 15:19:13.168 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 15:19:13.321 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 15:19:13.769 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 15:19:13.787 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 15:19:13.837 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 15:19:13.887 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 15:19:14.043 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 15:19:14.043 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 15:19:14.199 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 15:19:14.199 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 15:19:14.674 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 15:19:14.709 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 15:19:14.710 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 15:19:14.710 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 15:19:14.710 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 15:19:14.710 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 15:19:14.710 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 15:19:14.710 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 15:19:14.995 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 15:19:14.999 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 15:19:15.003 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 15:19:15.009 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1575011955008 with initial instances count: 2 
2019-11-29 15:19:15.016 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 15:19:15.017 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1575011955017, current=UP, previous=STARTING] 
2019-11-29 15:19:15.021 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 15:19:15.022 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 15:19:15.053 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 15:19:15.063 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 15:19:15.096 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 15:19:15.262 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 15:19:15.264 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 15:19:15.267 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 15:19:15.307 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 15:19:15.334 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 15:19:15.335 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 15:19:15.357 [main] INFO  [c.h.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 8.138 seconds (JVM running for 9.711) 
2019-11-29 15:19:54.079 [http-nio-8013-exec-1] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2019-11-29 15:19:54.079 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:525] - initServletBean() - Initializing Servlet 'dispatcherServlet' 
2019-11-29 15:19:54.089 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:547] - initServletBean() - Completed initialization in 10 ms 
2019-11-29 15:20:20.043 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 15:20:20.058 [hystrix-hq-multi-provider-1] INFO  [c.n.u.c.ShutdownEnabledTimer:58] - <init>() - Shutdown hook installed for: NFLoadBalancer-PingTimer-hq-multi-provider 
2019-11-29 15:20:20.059 [hystrix-hq-multi-provider-1] INFO  [c.n.loadbalancer.BaseLoadBalancer:197] - initWithConfig() - Client: hq-multi-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
2019-11-29 15:20:20.068 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:222] - enableAndInitLearnNewServersFeature() - Using serverListUpdater PollingServerListUpdater 
2019-11-29 15:20:20.082 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 15:20:20.084 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:150] - restOfInit() - DynamicServerListLoadBalancer for client hq-multi-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[10.0.133.131:8011],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.0.133.131:8011;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5ecc8df9 
2019-11-29 15:20:21.073 [PollingServerListUpdater-0] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 15:21:29.499 [DiscoveryClient-HeartbeatExecutor-0] ERROR [c.n.d.s.t.d.RedirectingEurekaHttpClient:91] - execute() - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://root:123456@localhost:8001/eureka/} 
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 common frames omitted
2019-11-29 15:21:29.502 [DiscoveryClient-1] WARN  [c.n.discovery.TimedSupervisorTask:71] - run() - task supervisor timed out 
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:66)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-11-29 15:21:29.509 [DiscoveryClient-HeartbeatExecutor-0] WARN  [c.n.d.s.t.d.RetryableEurekaHttpClient:130] - execute() - Request execution failed with message: java.net.ConnectException: Connection refused: connect 
2019-11-29 15:29:53.419 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4ec9395d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:29:53.608 [main] INFO  [c.h.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default 
2019-11-29 15:29:54.785 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 15:29:54.787 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 15:29:54.813 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces. 
2019-11-29 15:29:54.935 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 15:29:54.949 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 15:29:55.111 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=394477d9-5957-3cce-908f-1c3f3ec2e0ec 
2019-11-29 15:29:55.284 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:29:55.520 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:29:55.525 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:29:55.636 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:29:55.709 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:29:55.714 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$6f136083] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:29:55.756 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4ec9395d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 15:29:56.032 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 15:29:56.045 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 15:29:56.046 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 15:29:56.046 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 15:29:56.158 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 15:29:56.159 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2529 ms 
2019-11-29 15:29:56.267 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 15:29:56.267 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 15:29:56.280 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@26865b57 
2019-11-29 15:29:57.764 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 15:29:57.859 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 15:29:57.913 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 15:29:57.913 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 15:29:58.108 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 15:29:58.561 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 15:29:58.577 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 15:29:58.614 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 15:29:58.653 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 15:29:58.786 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 15:29:58.786 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 15:29:58.980 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 15:29:58.981 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 15:29:59.475 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 15:29:59.511 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 15:29:59.511 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 15:29:59.511 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 15:29:59.511 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 15:29:59.511 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 15:29:59.512 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 15:29:59.512 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 15:29:59.789 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 15:29:59.794 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 15:29:59.797 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 15:29:59.803 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1575012599802 with initial instances count: 1 
2019-11-29 15:29:59.809 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 15:29:59.810 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1575012599810, current=UP, previous=STARTING] 
2019-11-29 15:29:59.812 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 15:29:59.813 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 15:29:59.857 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 15:29:59.867 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 15:29:59.916 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 15:30:00.117 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 15:30:00.119 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 15:30:00.121 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 15:30:00.158 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 15:30:00.182 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 15:30:00.183 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 15:30:00.204 [main] INFO  [c.h.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 8.289 seconds (JVM running for 9.348) 
2019-11-29 15:30:43.785 [http-nio-8013-exec-1] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2019-11-29 15:30:43.785 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:525] - initServletBean() - Initializing Servlet 'dispatcherServlet' 
2019-11-29 15:30:43.794 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:547] - initServletBean() - Completed initialization in 9 ms 
2019-11-29 15:30:44.137 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 15:30:44.150 [hystrix-hq-multi-provider-1] INFO  [c.n.u.c.ShutdownEnabledTimer:58] - <init>() - Shutdown hook installed for: NFLoadBalancer-PingTimer-hq-multi-provider 
2019-11-29 15:30:44.151 [hystrix-hq-multi-provider-1] INFO  [c.n.loadbalancer.BaseLoadBalancer:197] - initWithConfig() - Client: hq-multi-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
2019-11-29 15:30:44.157 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:222] - enableAndInitLearnNewServersFeature() - Using serverListUpdater PollingServerListUpdater 
2019-11-29 15:30:44.160 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:150] - restOfInit() - DynamicServerListLoadBalancer for client hq-multi-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@527d5322 
2019-11-29 15:31:15.173 [PollingServerListUpdater-0] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 15:34:59.522 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 15:39:59.531 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 15:44:59.542 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 15:49:59.550 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 15:54:59.558 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 15:59:59.568 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 16:04:59.576 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 16:08:52.447 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b8540a63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 16:08:52.660 [main] INFO  [c.h.multi.HqMultiCustomerApplication:651] - logStartupProfileInfo() - No active profile set, falling back to default profiles: default 
2019-11-29 16:08:53.923 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:246] - multipleStoresDetected() - Multiple Spring Data modules found, entering strict repository configuration mode! 
2019-11-29 16:08:53.926 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:126] - registerRepositoriesIn() - Bootstrapping Spring Data repositories in DEFAULT mode. 
2019-11-29 16:08:53.950 [main] INFO  [o.s.d.r.c.RepositoryConfigurationDelegate:184] - registerRepositoriesIn() - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces. 
2019-11-29 16:08:54.066 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
2019-11-29 16:08:54.082 [main] WARN  [o.s.boot.actuate.endpoint.EndpointId:155] - logWarning() - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format. 
2019-11-29 16:08:54.226 [main] INFO  [o.s.cloud.context.scope.GenericScope:295] - setSerializationId() - BeanFactory id=2a99c3ec-e0e4-3557-a6ec-abcf1586ab6a 
2019-11-29 16:08:54.422 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 16:08:54.627 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 16:08:54.727 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 16:08:54.803 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 16:08:54.807 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'redisConfig' of type [com.hq.multi.config.RedisConfig$$EnhancerBySpringCGLIB$$d89e3189] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 16:08:54.838 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 16:08:54.884 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - postProcessAfterInitialization() - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b8540a63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-11-29 16:08:55.187 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:92] - initialize() - Tomcat initialized with port(s): 8013 (http) 
2019-11-29 16:08:55.202 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Initializing ProtocolHandler ["http-nio-8013"] 
2019-11-29 16:08:55.203 [main] INFO  [o.a.catalina.core.StandardService:173] - log() - Starting service [Tomcat] 
2019-11-29 16:08:55.204 [main] INFO  [o.a.catalina.core.StandardEngine:173] - log() - Starting Servlet engine: [Apache Tomcat/9.0.27] 
2019-11-29 16:08:55.333 [main] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring embedded WebApplicationContext 
2019-11-29 16:08:55.334 [main] INFO  [o.s.web.context.ContextLoader:284] - prepareWebApplicationContext() - Root WebApplicationContext: initialization completed in 2652 ms 
2019-11-29 16:08:55.448 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 16:08:55.449 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 16:08:55.460 [main] INFO  [c.n.config.DynamicPropertyFactory:281] - getInstance() - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2b99c937 
2019-11-29 16:08:56.917 [main] INFO  [o.s.b.a.e.web.EndpointLinksResolver:58] - <init>() - Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-11-29 16:08:57.003 [main] INFO  [s.d.s.w.PropertySourcedRequestMappingHandlerMapping:69] - initHandlerMethods() - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)] 
2019-11-29 16:08:57.051 [main] WARN  [c.n.c.sources.URLConfigurationSource:121] - <init>() - No URLs will be polled as dynamic configuration sources. 
2019-11-29 16:08:57.052 [main] INFO  [c.n.c.sources.URLConfigurationSource:122] - <init>() - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-11-29 16:08:57.188 [main] INFO  [o.s.s.c.ThreadPoolTaskExecutor:171] - initialize() - Initializing ExecutorService 'applicationTaskExecutor' 
2019-11-29 16:08:57.635 [main] WARN  [o.s.c.n.core.CoreAutoConfiguration:37] - <init>() - This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead. 
2019-11-29 16:08:57.650 [main] WARN  [o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration:19] - logWarning() - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka 
2019-11-29 16:08:57.690 [main] INFO  [o.s.c.n.eureka.InstanceInfoFactory:72] - create() - Setting initial instance status as: STARTING 
2019-11-29 16:08:57.731 [main] INFO  [c.netflix.discovery.DiscoveryClient:365] - <init>() - Initializing Eureka in region us-east-1 
2019-11-29 16:08:57.870 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:70] - <init>() - Using JSON encoding codec LegacyJacksonJson 
2019-11-29 16:08:57.870 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:71] - <init>() - Using JSON decoding codec LegacyJacksonJson 
2019-11-29 16:08:58.022 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:80] - <init>() - Using XML encoding codec XStreamXml 
2019-11-29 16:08:58.022 [main] INFO  [c.n.d.p.DiscoveryJerseyProvider:81] - <init>() - Using XML decoding codec XStreamXml 
2019-11-29 16:08:58.502 [main] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 16:08:58.537 [main] INFO  [c.netflix.discovery.DiscoveryClient:976] - fetchRegistry() - Disable delta property : false 
2019-11-29 16:08:58.537 [main] INFO  [c.netflix.discovery.DiscoveryClient:977] - fetchRegistry() - Single vip registry refresh property : null 
2019-11-29 16:08:58.537 [main] INFO  [c.netflix.discovery.DiscoveryClient:978] - fetchRegistry() - Force full registry fetch : false 
2019-11-29 16:08:58.537 [main] INFO  [c.netflix.discovery.DiscoveryClient:979] - fetchRegistry() - Application is null : false 
2019-11-29 16:08:58.538 [main] INFO  [c.netflix.discovery.DiscoveryClient:980] - fetchRegistry() - Registered Applications size is zero : true 
2019-11-29 16:08:58.538 [main] INFO  [c.netflix.discovery.DiscoveryClient:982] - fetchRegistry() - Application version is -1: true 
2019-11-29 16:08:58.538 [main] INFO  [c.netflix.discovery.DiscoveryClient:1065] - getAndStoreFullRegistry() - Getting all instance registry info from the eureka server 
2019-11-29 16:08:58.801 [main] INFO  [c.netflix.discovery.DiscoveryClient:1074] - getAndStoreFullRegistry() - The response status is 200 
2019-11-29 16:08:58.804 [main] INFO  [c.netflix.discovery.DiscoveryClient:1288] - initScheduledTasks() - Starting heartbeat executor: renew interval is: 2 
2019-11-29 16:08:58.807 [main] INFO  [c.n.discovery.InstanceInfoReplicator:60] - <init>() - InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-11-29 16:08:58.813 [main] INFO  [c.netflix.discovery.DiscoveryClient:465] - <init>() - Discovery Client initialized at timestamp 1575014938812 with initial instances count: 3 
2019-11-29 16:08:58.818 [main] INFO  [o.s.c.n.e.s.EurekaServiceRegistry:41] - register() - Registering application HQ-MULTI-CUSTOMER with eureka with status UP 
2019-11-29 16:08:58.818 [main] INFO  [c.netflix.discovery.DiscoveryClient:1323] - notify() - Saw local status change event StatusChangeEvent [timestamp=1575014938818, current=UP, previous=STARTING] 
2019-11-29 16:08:58.820 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:151] - start() - Context refreshed 
2019-11-29 16:08:58.821 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:844] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013: registering service... 
2019-11-29 16:08:58.844 [main] INFO  [s.d.s.w.p.DocumentationPluginsBootstrapper:154] - start() - Found 1 custom documentation plugin(s) 
2019-11-29 16:08:58.858 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [c.netflix.discovery.DiscoveryClient:853] - register() - DiscoveryClient_HQ-MULTI-CUSTOMER/hq-multi-customer:${spring.cloud.client.ipAddress}:8013 - registration status: 204 
2019-11-29 16:08:58.889 [main] INFO  [s.d.s.w.s.ApiListingReferenceScanner:41] - scan() - Scanning for api listing references 
2019-11-29 16:08:59.036 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_1 
2019-11-29 16:08:59.037 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: handleUsingGET_2 
2019-11-29 16:08:59.039 [main] INFO  [s.d.s.w.r.o.CachingOperationNameGenerator:40] - startingWith() - Generating unique operation named: testUsingGET_1 
2019-11-29 16:08:59.069 [main] INFO  [o.a.coyote.http11.Http11NioProtocol:173] - log() - Starting ProtocolHandler ["http-nio-8013"] 
2019-11-29 16:08:59.094 [main] INFO  [o.s.b.w.e.tomcat.TomcatWebServer:204] - start() - Tomcat started on port(s): 8013 (http) with context path '' 
2019-11-29 16:08:59.095 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration:145] - onApplicationEvent() - Updating port to 8013 
2019-11-29 16:08:59.117 [main] INFO  [c.h.multi.HqMultiCustomerApplication:61] - logStarted() - Started HqMultiCustomerApplication in 8.117 seconds (JVM running for 9.39) 
2019-11-29 16:10:15.483 [http-nio-8013-exec-1] INFO  [o.a.c.c.C.[Tomcat].[localhost].[/]:173] - log() - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2019-11-29 16:10:15.483 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:525] - initServletBean() - Initializing Servlet 'dispatcherServlet' 
2019-11-29 16:10:15.493 [http-nio-8013-exec-1] INFO  [o.s.web.servlet.DispatcherServlet:547] - initServletBean() - Completed initialization in 10 ms 
2019-11-29 16:10:15.848 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 16:10:15.861 [hystrix-hq-multi-provider-1] INFO  [c.n.u.c.ShutdownEnabledTimer:58] - <init>() - Shutdown hook installed for: NFLoadBalancer-PingTimer-hq-multi-provider 
2019-11-29 16:10:15.862 [hystrix-hq-multi-provider-1] INFO  [c.n.loadbalancer.BaseLoadBalancer:197] - initWithConfig() - Client: hq-multi-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
2019-11-29 16:10:15.868 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:222] - enableAndInitLearnNewServersFeature() - Using serverListUpdater PollingServerListUpdater 
2019-11-29 16:10:15.884 [hystrix-hq-multi-provider-1] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 16:10:15.886 [hystrix-hq-multi-provider-1] INFO  [c.n.l.DynamicServerListLoadBalancer:150] - restOfInit() - DynamicServerListLoadBalancer for client hq-multi-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=hq-multi-provider,current list of Servers=[10.0.133.131:8011],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.0.133.131:8011;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6639ba1a 
2019-11-29 16:10:16.873 [PollingServerListUpdater-0] INFO  [c.n.config.ChainedDynamicProperty:115] - checkAndFlip() - Flipping property: hq-multi-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
2019-11-29 16:13:58.547 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 16:18:58.555 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 16:23:58.563 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 16:28:58.571 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 16:33:58.579 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 16:38:58.587 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 16:43:58.595 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 16:48:58.603 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 16:53:58.611 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 16:58:58.619 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 17:03:58.628 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 17:08:58.636 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 17:13:58.645 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 17:18:58.653 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 17:23:58.662 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 17:28:58.670 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
2019-11-29 17:33:58.683 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.s.r.aws.ConfigClusterResolver:43] - getClusterEndpoints() - Resolving eureka endpoints via configuration 
